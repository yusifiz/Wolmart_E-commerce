# Generated by Django 4.0 on 2022-02-25 20:11

import ckeditor.fields
from django.db import migrations, models
import django.db.models.deletion
import taggit.managers


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('taggit', '0004_alter_taggeditem_content_type_alter_taggeditem_tag'),
    ]

    operations = [
        migrations.CreateModel(
            name='Blog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=127, null=True)),
                ('name_en', models.CharField(blank=True, max_length=127, null=True)),
                ('name_az', models.CharField(blank=True, max_length=127, null=True)),
                ('name_ru', models.CharField(blank=True, max_length=127, null=True)),
                ('image', models.ImageField(upload_to='blog/')),
                ('author', models.CharField(blank=True, max_length=127, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('content', ckeditor.fields.RichTextField(blank=True, help_text='Content', null=True)),
                ('content_en', ckeditor.fields.RichTextField(blank=True, help_text='Content', null=True)),
                ('content_az', ckeditor.fields.RichTextField(blank=True, help_text='Content', null=True)),
                ('content_ru', ckeditor.fields.RichTextField(blank=True, help_text='Content', null=True)),
                ('author_comment', models.CharField(blank=True, max_length=255, null=True)),
                ('slug', models.SlugField(blank=True, max_length=127, null=True)),
            ],
            options={
                'verbose_name': 'Blog',
                'verbose_name_plural': 'Blogs',
                'ordering': ('created_at',),
            },
        ),
        migrations.CreateModel(
            name='BlogCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=127, null=True)),
                ('slug', models.SlugField(blank=True, max_length=127, null=True)),
            ],
            options={
                'verbose_name': 'Blog Category',
                'verbose_name_plural': 'Blog Categories',
            },
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=80)),
                ('email', models.EmailField(max_length=254)),
                ('body', models.TextField()),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('active', models.BooleanField(default=False)),
                ('post', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='blog.blog')),
            ],
            options={
                'ordering': ['created_on'],
            },
        ),
        migrations.AddField(
            model_name='blog',
            name='category',
            field=models.ForeignKey(blank=True, max_length=127, null=True, on_delete=django.db.models.deletion.CASCADE, to='blog.blogcategory'),
        ),
        migrations.AddField(
            model_name='blog',
            name='tags',
            field=taggit.managers.TaggableManager(help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags'),
        ),
    ]
